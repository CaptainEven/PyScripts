[net]
# Testing
#batch=1
#subdivisions=1
# Training
batch=64
subdivisions=16
width=768
height=448
channels=3
momentum=0.9
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.0001
burn_in=1000
max_batches = 500200
policy=steps
steps=400000,450000
scales=.1,.1

### CONV1 - 1 (1)
# conv1
[convolutional]                      # 0
filters=32
size=3
pad=1
stride=2
batch_normalize=1
activation=leaky

### CONV2 - MBConv1 - 1 (1)
# conv2_1_expand
[convolutional]                      # 1
filters=32
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv2_1_dwise
[convolutional]                      #  2
groups=32
filters=32
size=3
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 3

# squeeze ratio r=4 (recommended r=16)
[convolutional]                      # 4
filters=8
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 5
filters=32
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 6
from=-4

# conv2_1_linear
[convolutional]                      # 7
filters=16
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV3 - MBConv6 - 1 (2)
# conv2_2_expand
[convolutional]                      # 8
filters=96
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv2_2_dwise
[convolutional]                      # 9
groups=96
filters=96
size=3
pad=1
stride=2
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 10

# squeeze ratio r=8 (recommended r=16)
[convolutional]                      # 11
filters=16
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 12
filters=96
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 13
from=-4

# conv2_2_linear
[convolutional]                      # 14
filters=24
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV3 - MBConv6 - 2 (2)
# conv3_1_expand
[convolutional]                      # 15
filters=144
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv3_1_dwise
[convolutional]                      # 16
groups=144
filters=144
size=3
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 17

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 18
filters=8
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 19
filters=144
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 20
from=-4

# conv3_1_linear
[convolutional]                      # 21
filters=24
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV4 - MBConv6 - 1 (2)
# dropout only before residual connection
[dropout]                            # 22
probability=.0

# block_3_1
[shortcut]                           # 23
from=-9
activation=linear

# conv_3_2_expand
[convolutional]                      # 24
filters=144
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_3_2_dwise
[convolutional]                      # 25
groups=144
filters=144
size=5
pad=1
stride=2
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 26

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 27
filters=8
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 28
filters=144
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 29
from=-4

# conv_3_2_linear
[convolutional]                      # 30
filters=40
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV4 - MBConv6 - 2 (2)
# conv_4_1_expand
[convolutional]                      # 31
filters=192
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_4_1_dwise
[convolutional]                      # 32
groups=192
filters=192
size=5
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 33

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 34
filters=16
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 35
filters=192
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 36
from=-4

# conv_4_1_linear
[convolutional]                      # 37
filters=40
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV5 - MBConv6 - 1 (3)
# dropout only before residual connection
[dropout]                            # 38
probability=.0

# block_4_2
[shortcut]                           # 39
from=-9
activation=linear

# conv_4_3_expand
[convolutional]                      # 40
filters=192
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_4_3_dwise
[convolutional]                      # 41
groups=192
filters=192
size=3
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 42

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 43
filters=16
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 44
filters=192
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 45
from=-4

# conv_4_3_linear
[convolutional]                      # 46
filters=80
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV5 - MBConv6 - 2 (3)
# conv_4_4_expand
[convolutional]                      # 47
filters=384
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_4_4_dwise
[convolutional]                      # 48
groups=384
filters=384
size=3
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 49

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 50
filters=24
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 51
filters=384
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 52
from=-4

# conv_4_4_linear
[convolutional]                      # 53
filters=80
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV5 - MBConv6 - 3 (3)
# dropout only before residual connection
[dropout]                            # 54
probability=.0

# block_4_4
[shortcut]                           # 55
from=-9
activation=linear

# conv_4_5_expand
[convolutional]                      # 56
filters=384
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_4_5_dwise
[convolutional]                      # 57
groups=384
filters=384
size=3
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 58

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 59
filters=24
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 60
filters=384
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 61
from=-4

# conv_4_5_linear
[convolutional]                      # 62
filters=80
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV6 - MBConv6 - 1 (3)
# dropout only before residual connection
[dropout]                            # 63
probability=.0

# block_4_6
[shortcut]                           # 64
from=-9
activation=linear

# conv_4_7_expand
[convolutional]                      # 65
filters=384
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_4_7_dwise
[convolutional]                      # 66
groups=384
filters=384
size=5
pad=1
stride=2
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 67

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 68
filters=24
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 69
filters=384
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 70
from=-4

# conv_4_7_linear
[convolutional]                      # 71
filters=112
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV6 - MBConv6 - 2 (3)
# conv_5_1_expand
[convolutional]                      # 72
filters=576
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_5_1_dwise
[convolutional]                      # 73
groups=576
filters=576
size=5
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 74

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 75
filters=32
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 76
filters=576
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 77
from=-4

# conv_5_1_linear
[convolutional]                      # 78
filters=112
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV6 - MBConv6 - 3 (3)
# dropout only before residual connection
[dropout]                            # 79
probability=.0

# block_5_1
[shortcut]                           # 80
from=-9
activation=linear

# conv_5_2_expand
[convolutional]                      # 81
filters=576
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_5_2_dwise
[convolutional]                      # 82
groups=576
filters=576
size=5
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 83

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 84
filters=32
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 85
filters=576
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 86
from=-4

# conv_5_2_linear
[convolutional]                      # 87
filters=112
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV7 - MBConv6 - 1 (4)
# dropout only before residual connection
[dropout]                            # 88
probability=.0

# block_5_2
[shortcut]                           # 89
from=-9
activation=linear

# conv_5_3_expand
[convolutional]                      # 90
filters=576
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_5_3_dwise
[convolutional]                      # 91
groups=576
filters=576
size=5
pad=1
stride=2
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 92

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 93
filters=32
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 94
filters=576
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 95
from=-4

# conv_5_3_linear
[convolutional]                      # 96
filters=192
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV7 - MBConv6 - 2 (4)
# conv_6_1_expand
[convolutional]                      # 97
filters=960
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_6_1_dwise
[convolutional]                      # 98
groups=960
filters=960
size=5
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 99

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 100
filters=64
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 101
filters=960
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 102
from=-4

# conv_6_1_linear
[convolutional]                      # 103
filters=192
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV7 - MBConv6 - 3 (4)
# dropout only before residual connection
[dropout]                            # 104
probability=.0

# block_6_1
[shortcut]                           # 105
from=-9
activation=linear

# conv_6_2_expand
[convolutional]                      # 106
filters=960
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_6_2_dwise
[convolutional]                      # 107
groups=960
filters=960
size=5
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 108

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 109
filters=64
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 110
filters=960
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 111
from=-4

# conv_6_2_linear
[convolutional]                      # 112
filters=192
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV7 - MBConv6 - 4 (4)
# dropout only before residual connection
[dropout]                            # 113
probability=.0

# block_6_1
[shortcut]                           # 114
from=-9
activation=linear

# conv_6_2_expand
[convolutional]                      # 115
filters=960
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_6_2_dwise
[convolutional]                      # 116
groups=960
filters=960
size=5
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 117

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 118
filters=64
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 119
filters=960
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 120
from=-4

# conv_6_2_linear
[convolutional]                      # 121
filters=192
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV8 - MBConv6 - 1 (1)
# dropout only before residual connection
[dropout]                            # 122
probability=.0

# block_6_2
[shortcut]                           # 123
from=-9
activation=linear

# conv_6_3_expand
[convolutional]                      # 124
filters=960
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

# conv_6_3_dwise
[convolutional]                     # 125
groups=960
filters=960
size=3
stride=1
pad=1
batch_normalize=1
activation=leaky

#squeeze-n-excitation
[avgpool]                            # 126

# squeeze ratio r=16 (recommended r=16)
[convolutional]                      # 127
filters=64
size=1
stride=1
activation=leaky

# excitation
[convolutional]                      # 128
filters=960
size=1
stride=1
activation=logistic

# multiply channels
[scale_channels]                     # 129
from=-4

# conv_6_3_linear
[convolutional]                      # 130
filters=320
size=1
stride=1
pad=0
batch_normalize=1
activation=linear

### CONV9 - Conv2d 1x1
# conv_6_4
[convolutional]                      # 131
filters=1280
size=1
stride=1
pad=0
batch_normalize=1
activation=leaky

##########################

[convolutional]                      # 132
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]                      # 133
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[shortcut]                           # 134
activation=leaky
from=-2

[convolutional]                      # 135
size=1
stride=1
pad=1
filters=30
activation=linear

[yolo]                               # 136
mask = 6,7,8
anchors = 12, 16, 19, 36, 40, 28, 36, 75, 76, 55, 72, 146, 142, 110, 192, 243, 459, 401
classes=5
num=9
jitter=.3
ignore_thresh=.7
truth_thresh=1
random=1
scale_x_y=1.05
iou_thresh=0.213
cls_normalizer=1.0
iou_normalizer=0.07
iou_loss=ciou
nms_kind=greedynms
beta_nms=0.6

[route]                              # 137
layers = -4

[convolutional]                      # 138
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[upsample]                           # 139
stride=2

# add by Duan.
[route]                              # 140
layers = 90

[convolutional]                      # 141
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[shortcut]                           # 142
activation=leaky
from=-3

[convolutional]                      # 143
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[shortcut]                           # 144
activation=leaky
from=-5

[shortcut]                           # 145
activation=leaky
from=-4

[convolutional]                      # 146
size=1
stride=1
pad=1
filters=30
activation=linear

[yolo]                               # 147
mask = 3,4,5
anchors = 12, 16, 19, 36, 40, 28, 36, 75, 76, 55, 72, 146, 142, 110, 192, 243, 459, 401
classes=5
num=9
jitter=.3
ignore_thresh=.7
truth_thresh=1
random=1
scale_x_y=1.05
iou_thresh=0.213
cls_normalizer=1.0
iou_normalizer=0.07
iou_loss=ciou
nms_kind=greedynms
beta_nms=0.6

[route]                              # 148
layers=-5

[convolutional]                      # 149
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

[upsample]                           # 150
stride=2

# add by Duan.
[route]                              # 151
layers = 65

[convolutional]                      # 152
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

[shortcut]                           # 153
activation=leaky
from=-3

[convolutional]                      # 154
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky

[shortcut]                           # 155
activation=leaky
from=-5

[shortcut]                           # 156
activation=leaky
from=-4

[convolutional]                      # 157
size=1
stride=1
pad=1
filters=30
activation=linear

[yolo]                               # 158
mask = 0,1,2
anchors = 12, 16, 19, 36, 40, 28, 36, 75, 76, 55, 72, 146, 142, 110, 192, 243, 459, 401
classes=5
num=9
jitter=.3
ignore_thresh=.7
truth_thresh=1
random=1
scale_x_y=1.05
iou_thresh=0.213
cls_normalizer=1.0
iou_normalizer=0.07
iou_loss=ciou
nms_kind=greedynms
beta_nms=0.6

[route]                              # 159
layers=-25                           # 134

[convolutional]                      # 160  第1层YOLO层对应的特征向量
size=1
stride=1
pad=1
filters=128
activation=linear

[route]                              # 161
layers=-16                           # 145

[convolutional]                      # 162  第2层YOLO层对应的特征向量
size=1
stride=1
pad=1
filters=128
activation=linear

[route]                              # 163
layers=-7                            # 156

[convolutional]                      # 164  第3层YOLO层对应的特征向量
size=1
stride=1
pad=1
filters=128
activation=linear